import pickle
from communication import *
import os

assert len(sys.argv) == 3
SETUP = False
secretf = sys.argv[2]

# try:
#     with open(secretf, "rb") as f:
#         SECRET_KEY = pickle.load(f)
#         PUBLIC_KEY = pickle.load(f)
#         print("Keys loaded successfully")
# except Exception as e:
#     print("Keys failed to load:", e)
#     raise
# print(get_hex_key(PUBLIC_KEY))

port = int(sys.argv[1])
secretf = sys.argv[2]


my_ip = "127.0.0.1"
stats_address = ("127.0.0.1", 8999)
my_http_address = "http://" + my_ip + ":" + str(port) + "/"
my_address = (my_ip, port)
# Se incarca cheia folosita pentru postat pe bulletin board
try:
    with open(secretf, "rb") as f:
        SECRET_KEY = pickle.load(f)
        PUBLIC_KEY = pickle.load(f)
        print("Keys loaded successfully")
except Exception as e:
    print("Keys failed to load:", e)
    raise
if SETUP == True:
    # Se realizeaza inregistrarea serverului in mixnet primind p si lista de servere din mixnet
    response = register(stats_address, PUBLIC_KEY, my_http_address)
    # Se obtin informatii despre celelalte servere din mixnet
    peers_dic, peers_pk, peers_adr, peers_index, identity, network_ts = get_register_info(response, PUBLIC_KEY)
    # Se posteaza o dovada a cheii de criptare generate de server
    r, key_pair = send_network_pub_key(response, PUBLIC_KEY)
    # Se aduna toate dovezile serverelor din mixnet
    commits, network_ts = get_messages(peers_pk, network_ts)
    # Se deschid dovezile si se arata cheile de criptare
    open_commit(r, key_pair["publicKey"].h, PUBLIC_KEY)
    # Se verifica daca cheile de criptare corespund dovezilor
    result = verify_commits(commits, peers_pk, network_ts)
    identity += 1
    if result is not False:
        network_pub_keys, network_ts = result
    else:
        '''Someone sent wrong commit'''
        raise AttributeError("Wrong commit")

    network_pub_key = get_network_pub_key(key_pair["publicKey"].p, key_pair["publicKey"].g, network_pub_keys)
    # len(peers//2+1) in loc de 2
    f = gen_polynomial(len(peers_dic) // 2 + 1, (key_pair["privateKey"].p - 1) // 2, key_pair["privateKey"].x)

    commit_l = commit_poly_coefs(f, key_pair["privateKey"].g, key_pair["privateKey"].p)
    send_commit(commit_l, PUBLIC_KEY)
    messages, network_ts = get_messages(peers_pk, network_ts)
    # are commiturile adica g^(suma coeficientilor celorlalti) Fi
    Fi = {}
    for message in messages:
        Fi[message["W"]] = [int(coef) for coef in message["m"].split(" ")]

    share_senders = []
    for peer in peers_dic:
        if peer["public_key"] == get_hex_key(PUBLIC_KEY):
            continue
        share_senders.append(peer)

    server_thread = listen_shares(my_address, share_senders)

    # fiecarui membru i primeste rezultatul polinomului
    send_shares(f, peers_adr, peers_index, key_pair, PUBLIC_KEY)

    server_thread.join()

    req_list = []
    try:
        port_s = str(port)
        with open("requests" + port_s + ".txt", "rb") as reqs:
            while True:
                r = pickle.load(reqs)
                req_list.append(r)
    except EOFError:
        print("done")

    assert (check_shares(req_list, Fi, identity, key_pair["privateKey"].p, key_pair["privateKey"].g))

    shadow = 0
    for req in req_list:
        shadow += req["share"]
        shadow %= ((key_pair["privateKey"].p - 1) // 2)
    shadow += calc_poly(f, identity, (key_pair["privateKey"].p - 1) // 2)
    shadow %= ((key_pair["privateKey"].p - 1) // 2)

    network_priv_key = shadow
    # partial_interpol([i + 1 for i in range(len(peers_pk))], identity, shadow,
    #                                     (key_pair["privateKey"].p - 1) // 2)

    validate(stats_address, PUBLIC_KEY, my_http_address, network_pub_key)
    print("net_pub_key")
    print(network_pub_key)
    print("net_priv_key")
    print(network_priv_key)
    print("p")
    print(key_pair["privateKey"].p)
    print("g")
    print(key_pair["privateKey"].g)
    print("h")
    print(key_pair["publicKey"].h)
    print("peers_dic")
    print(peers_dic)
    os.environ["p"] = str(key_pair["privateKey"].p)
    os.environ["g"] = str(key_pair["privateKey"].g)
    os.environ["h"] = str(key_pair["publicKey"].h)
    os.environ["mixSecretKey"] = str(network_priv_key)
    os.environ["mixPublicKey"] = str(network_pub_key)
    os.environ["peers"] = json.dumps(peers_dic)
    os.environ["bboard_key"] = str(get_hex_key(PUBLIC_KEY))
    os.environ["identity"] = str(identity)
    os.environ["address"] = my_http_address

else:
    os.environ[
        "p"] = "159894130690866518715676700679914580048989761067929251232658984640241370656048819478970540172400824940676291914583930673450312079276754347590810962921127772180565467551108089545135195352292977608077158096313520573423992659974844915883976947063226056290758241311189459697842977699382649575548521103800914436539"
    os.environ[
        "g"] = "10547051139819993035592588960585696514283723775938929413997989209319437855922291713060634847770885464456928156715275810980285468399273837176928041648262992562944600479250061123430862195569257263768267354281654377031027540419882670397742045164524593294540815253254444894526442136154969275137541190123317586897"
    os.environ[
        "mixPublicKey"] = "101524228436239905611843836446197389534737045014467329740956224728619984682276494803356875259720335301443058891342068025754148479534055241842613938074441977114910797653536389589796816252734251959615399693517150111483725394636131916447985392861704101738020360217797844063089463743761549989932125851535512757589"
    os.environ["peers"] = json.dumps([{
        'public_key': '800363656c67616d616c0a5075626c69634b65790a7100298171017d71022858010000007071038a81bb610cd55c4793866f4b8bc83a828a6077c750867954755af6fbb00f84545b63d84ab0bd901e9a12ca8ae64476c82309a0925ac34a08a70d2331f90ccda49a46ff102f9d10851805827aa9f52d56d4e48cfaaf8a84f2827f82f878e7049c0c57f937cac111a4d3e9ebb6e4fe30fdb1571c7d3ada4d154557772e26a47f61b2e30058010000006771048a81bdff57ccc95497f1c5ce70f1b51b6944887ba12894674d5cf49245ec8b63819f9005224f0286b1e4d973e7a9d7965052a6c466663d7141862ba8a6f1dfe3a4ffcb2d7b0d8b981808cfa3663bd94b22cbee4e8d643a158a487f7e33c2156bcda330303651b169226c9610e6a7ffc158e04cd3daa304f0e43f5bfdb79d7e49f8cd0058010000006871058a80f31e4fbf74fd4d9a3e8dd9fcd4ca742322daf6b2e63be91efb6c94563254314beecfe1db55e6285aeb7d1f8d306011b584e120db8a009c16477238d2e64fa548cceb672053fc5775a0b1163b8698185779e78736f3ad0df148fd453e5f73e7e1304977fb43ef85a74d809acaedbdbd38b2afdf4398c21d1041c1324b255f317a58070000006269745f6c656e71064d000475622e',
        'address': 'http://127.0.0.1:9001/'}, {
        'public_key': '800363656c67616d616c0a5075626c69634b65790a7100298171017d71022858010000007071038a81bb610cd55c4793866f4b8bc83a828a6077c750867954755af6fbb00f84545b63d84ab0bd901e9a12ca8ae64476c82309a0925ac34a08a70d2331f90ccda49a46ff102f9d10851805827aa9f52d56d4e48cfaaf8a84f2827f82f878e7049c0c57f937cac111a4d3e9ebb6e4fe30fdb1571c7d3ada4d154557772e26a47f61b2e30058010000006771048a81ea29caffd1ea27b7b5b0004295ce3b5497a501859a0dce3f5edea348ccfe3e1ec17fbdadd0ff30a605bc8f9c56ce410f8a3b418db37dc0df2f4aeccca46e6d6be1c00a650f7d52125eee579866fdd5ed43c5a71499295bf61418df8e0e452ec637026f4a36897de8e39c81eb751ae167c155642acece05312e5f45e7c1744d9c0058010000006871058a802e706923cddb23dd504972016c9f1f8829a3cc99be0d92d6c906f57757f4a1b372881a804ae24cd353cb79b6bd0ee97a4218c352f7c0a32b8b8243ccb2fc4aa7cb7d083bc39d653d43a82f8f2e94352eb2e3b57c11dc45251aa4aff39c43541cf9cce97495f8b0b672a0e92b257a64b333d0ee4833f9bcd6bed3f398b3e34e3c58070000006269745f6c656e71064d000475622e',
        'address': 'http://127.0.0.1:9002/'}, {
        'public_key': '800363656c67616d616c0a5075626c69634b65790a7100298171017d71022858010000007071038a81bb610cd55c4793866f4b8bc83a828a6077c750867954755af6fbb00f84545b63d84ab0bd901e9a12ca8ae64476c82309a0925ac34a08a70d2331f90ccda49a46ff102f9d10851805827aa9f52d56d4e48cfaaf8a84f2827f82f878e7049c0c57f937cac111a4d3e9ebb6e4fe30fdb1571c7d3ada4d154557772e26a47f61b2e30058010000006771048a808f7006b683945bf589244b82c8dacb3993788374d8153e0ad3df2c2850fbea7f35f29d5f9ccbce83ac36ba3626d785adb63805f6dfecbf06a164fdbd0765797e82315ca914ac4d4f1a0b76b11d962b6d8a84246dc168217d58b5916448520a210250934c3bbf295db7f458face5c184181ccccfe0f4249189003f655239bd92858010000006871058a80d9704b5443f446205cd5498215a326770d883c7a62d05cff75fed16cdd6e5b0201b14afc1de5b600f09e4b9a81f3041e4361f7cfacdc36c74278ab4ad486ab279c14dbcf26b8b1f27a49f94c1b198071a172a19510618b0f1759968a4cbed502c816647eeaeac1a91d38b26f244bfa8db4f2eab37ebc79f8e8335cad7422a43058070000006269745f6c656e71064d000475622e',
        'address': 'http://127.0.0.1:9003/'}])
    if sys.argv[1] == "9001":
        os.environ[
            "h"] = "146459455919688751475410896018110521248718469956889695758071393736623866882257825207171886902449817942633713499451762598235584738321676224909932948698937767638624110648363364529907787319029286378319540643377529229347384887732849476825567262422129057903960744700994969370535931946865898272430430891444609936903"
        os.environ[
            "mixSecretKey"] = "66781395984789172785285374860087455334366382758658024470537137129358319526012532816285062811136424456323907587397601109895385827575740685734447158005860024501614783320292237734436052691746173689977683823563923493788792789747743770302781186435292475719278559603865394878211578733003620939686387474031690722493"
        os.environ[
            "bboard_key"] = "800363656c67616d616c0a5075626c69634b65790a7100298171017d71022858010000007071038a81bb610cd55c4793866f4b8bc83a828a6077c750867954755af6fbb00f84545b63d84ab0bd901e9a12ca8ae64476c82309a0925ac34a08a70d2331f90ccda49a46ff102f9d10851805827aa9f52d56d4e48cfaaf8a84f2827f82f878e7049c0c57f937cac111a4d3e9ebb6e4fe30fdb1571c7d3ada4d154557772e26a47f61b2e30058010000006771048a81bdff57ccc95497f1c5ce70f1b51b6944887ba12894674d5cf49245ec8b63819f9005224f0286b1e4d973e7a9d7965052a6c466663d7141862ba8a6f1dfe3a4ffcb2d7b0d8b981808cfa3663bd94b22cbee4e8d643a158a487f7e33c2156bcda330303651b169226c9610e6a7ffc158e04cd3daa304f0e43f5bfdb79d7e49f8cd0058010000006871058a80f31e4fbf74fd4d9a3e8dd9fcd4ca742322daf6b2e63be91efb6c94563254314beecfe1db55e6285aeb7d1f8d306011b584e120db8a009c16477238d2e64fa548cceb672053fc5775a0b1163b8698185779e78736f3ad0df148fd453e5f73e7e1304977fb43ef85a74d809acaedbdbd38b2afdf4398c21d1041c1324b255f317a58070000006269745f6c656e71064d000475622e"
        os.environ["identity"] = "1"
        os.environ["address"] = 'http://127.0.0.1:9001/'
    elif sys.argv[1] == "9002":
        os.environ[
            "h"] = "100825936697495448176158308238272923840344620111042859593938170265045965286908645484386063753918458127381184629697371670080747872922263055119379576316135585166128779807736275971480283355050672571048606938557554175110753025052319360644352783197253501722677145572159074769881987380064408121040236829742043442717"
        os.environ[
            "mixSecretKey"] = "68197419784503614128377741598951050229349057605734979100890847908331083005847511810823126344693464331685650226387200940102964287989323825097753544017934335656976925074703166972739061672067764418476506650581171260052677180128098974500709388519723164435560144175303183103826899749760217771087413068429070022240"
        os.environ[
            "bboard_key"] = "800363656c67616d616c0a5075626c69634b65790a7100298171017d71022858010000007071038a81bb610cd55c4793866f4b8bc83a828a6077c750867954755af6fbb00f84545b63d84ab0bd901e9a12ca8ae64476c82309a0925ac34a08a70d2331f90ccda49a46ff102f9d10851805827aa9f52d56d4e48cfaaf8a84f2827f82f878e7049c0c57f937cac111a4d3e9ebb6e4fe30fdb1571c7d3ada4d154557772e26a47f61b2e30058010000006771048a81ea29caffd1ea27b7b5b0004295ce3b5497a501859a0dce3f5edea348ccfe3e1ec17fbdadd0ff30a605bc8f9c56ce410f8a3b418db37dc0df2f4aeccca46e6d6be1c00a650f7d52125eee579866fdd5ed43c5a71499295bf61418df8e0e452ec637026f4a36897de8e39c81eb751ae167c155642acece05312e5f45e7c1744d9c0058010000006871058a802e706923cddb23dd504972016c9f1f8829a3cc99be0d92d6c906f57757f4a1b372881a804ae24cd353cb79b6bd0ee97a4218c352f7c0a32b8b8243ccb2fc4aa7cb7d083bc39d653d43a82f8f2e94352eb2e3b57c11dc45251aa4aff39c43541cf9cce97495f8b0b672a0e92b257a64b333d0ee4833f9bcd6bed3f398b3e34e3c58070000006269745f6c656e71064d000475622e"
        os.environ["identity"] = "2"
        os.environ["address"] = 'http://127.0.0.1:9002/'
    elif sys.argv[1] == "9003":
        os.environ[
            "h"] = "115261953672842181720538227439688577800135910684887247189749968824750838738566714986269663707272577067337865449918198890317901899713818023656771781522866568459420378909227462166635713283251763350087621052948477895921316481658660636661691945368231827070433195529086777213042521805978547487689932421837851510166"
        os.environ[
            "mixSecretKey"] = "69613443584218055471470108337814645124331732452811933731244558687303846485682490805361189878250504207047392865376800770310542748402906964461059930030008646812339066829114096211042070652389355146975329477598419026316561570508454178698637590604153853151841728746740971329442220766516814602488438662826449321987"
        os.environ[
            "bboard_key"] = "800363656c67616d616c0a5075626c69634b65790a7100298171017d71022858010000007071038a81bb610cd55c4793866f4b8bc83a828a6077c750867954755af6fbb00f84545b63d84ab0bd901e9a12ca8ae64476c82309a0925ac34a08a70d2331f90ccda49a46ff102f9d10851805827aa9f52d56d4e48cfaaf8a84f2827f82f878e7049c0c57f937cac111a4d3e9ebb6e4fe30fdb1571c7d3ada4d154557772e26a47f61b2e30058010000006771048a808f7006b683945bf589244b82c8dacb3993788374d8153e0ad3df2c2850fbea7f35f29d5f9ccbce83ac36ba3626d785adb63805f6dfecbf06a164fdbd0765797e82315ca914ac4d4f1a0b76b11d962b6d8a84246dc168217d58b5916448520a210250934c3bbf295db7f458face5c184181ccccfe0f4249189003f655239bd92858010000006871058a80d9704b5443f446205cd5498215a326770d883c7a62d05cff75fed16cdd6e5b0201b14afc1de5b600f09e4b9a81f3041e4361f7cfacdc36c74278ab4ad486ab279c14dbcf26b8b1f27a49f94c1b198071a172a19510618b0f1759968a4cbed502c816647eeaeac1a91d38b26f244bfa8db4f2eab37ebc79f8e8335cad7422a43058070000006269745f6c656e71064d000475622e"
        os.environ["identity"] = "3"
        os.environ["address"] = 'http://127.0.0.1:9003/'

from routes import app

if __name__ == "__main__":
    app.run(port=port)
